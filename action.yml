name: "Setup CDK Environment"
description: "Sets up Node.js and CDK with caching"
branding:
  icon: "arrow-up-circle"
  color: "blue"

inputs:
  aws-region:
    description: "AWS Region"
    required: true
  aws-access-key-id:
    description: "AWS Access Key ID"
    required: true
  aws-secret-access-key:
    description: "AWS Secret Access Key"
    required: true
  node-version:
    description: "Node.js version to use (if not specified, version 20 will be used)"
    required: false
    default: "20"
  cdk-version:
    description: "AWS CDK version to install (if not specified, latest version will be installed)"
    required: false
    default: "latest"
  working-directory:
    description: "Working directory for npm commands (if not specified, current directory will be used)"
    required: false
    default: "."
  skip-dependencies:
    description: "Skip installing dependencies (if not specified, dependencies will be installed)"
    required: false
    default: "true"

runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: npm
        cache-dependency-path: ${{ inputs.working-directory }}/package-lock.json

    - name: Install Dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ "${{ inputs.skip-dependencies }}" != "true" ]; then
          echo "Installing project dependencies..."
          if ! npm ci; then
            echo "::error::Failed to install dependencies. Check your package-lock.json and node_modules"
            exit 1
          fi
        else
          echo "Skipping dependency installation..."
        fi

        echo "Installing AWS CDK..."
        CDK_INSTALL_CMD="npm install -g aws-cdk"
        if [ "${{ inputs.cdk-version }}" != "latest" ]; then
          CDK_INSTALL_CMD="${CDK_INSTALL_CMD}@${{ inputs.cdk-version }}"
        fi
        
        if ! eval $CDK_INSTALL_CMD; then
          echo "::error::Failed to install AWS CDK. Please verify the version if specified"
          exit 1
        fi

        # Verify CDK installation
        cdk --version || exit 1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
