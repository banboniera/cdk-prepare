name: "CDK Prepare"
description: "Prepares AWS CDK environment and creates a deployment package"
branding:
  icon: "arrow-up-circle"
  color: "blue"

inputs:
  aws-region:
    description: "Target AWS region for deployment"
    required: true
  role-to-assume:
    description: "AWS IAM role ARN to assume"
    required: true
  synth-command:
    description: "CDK synthesis command (default: npm run synth)"
    required: false
    default: "npm run synth"
  artifact-name:
    description: "Name for the deployment artifact (default: cdk-deployment-package)"
    required: false
    default: "cdk-deployment-package"
  node-version:
    description: "Node.js version (default: 22)"
    required: false
    default: "22"

runs:
  using: composite
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: npm
        cache-dependency-path: package-lock.json

    - name: Install Dependencies
      shell: bash
      run: npm ci

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.role-to-assume }}

    - name: Synthesize CDK stacks
      shell: bash
      run: ${{ inputs.synth-command }} --no-version-reporting --no-path-metadata

    - name: Analyze stacks and create summary
      shell: bash
      run: |
        echo "### Stacks Overview" >> $GITHUB_STEP_SUMMARY
        echo "| Stack Name | Dependencies | Region |" >> $GITHUB_STEP_SUMMARY
        echo "|------------|--------------|--------|" >> $GITHUB_STEP_SUMMARY
        jq -r '.artifacts | to_entries[] | 
          select(.key | endswith(".assets") | not) | 
          select(.key != "Tree") | 
          select(.value.type == "aws:cloudformation:stack") | 
          "| `\(.key)` | \(.value.dependencies // [] | 
            map(select(. | endswith(".assets") | not) | 
            select(. != "Tree")) | 
            sort | 
            map("`\(.)`") | 
            join(", ")) | \(.value.environment | capture("(?<region>[^/]+)$").region) |"' \
          cdk.out/manifest.json >> $GITHUB_STEP_SUMMARY

    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: cdk.out
        retention-days: 1
        compression-level: 9
